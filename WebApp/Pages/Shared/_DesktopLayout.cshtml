@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <title>Investment Tracker</title>
    <!-- <link rel="icon" type="image/x-icon" href="../dist/images/favicon.png" /> -->
    <link rel="stylesheet" href="~/css/styles.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    <script src="~/js/jquery.min.js"></script>
    <link rel="stylesheet" href="~/js/owlcarousel/assets/owl.carousel.min.css" />
    <link rel="stylesheet" href="~/js/owlcarousel/assets/owl.theme.default.css" />
    <!-- Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
        }
        
        .top-navbar {
            background: linear-gradient(90deg, #1a237e 0%, #0d47a1 100%);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 0.75rem 1.5rem;
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 100;
        }
        
        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 600;
            color: white;
            text-decoration: none;
        }
        
        .navbar-brand:hover {
            color: rgba(255, 255, 255, 0.9);
        }
        
        .main-content {
            background-color: #f8f9fa;
            min-height: 100vh;
            padding: 2rem 2.5rem;
            margin-top: 70px; /* Adjust based on navbar height */
            transition: all 0.3s ease;
        }
        
        .nav-link {
            color: rgba(255, 255, 255, 0.85);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            font-weight: 500;
        }
        
        .nav-link:hover, .nav-link.active {
            color: white;
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .nav-link i {
            margin-right: 6px;
            font-size: 1.2rem;
        }
        
        .user-dropdown .dropdown-toggle::after {
            display: none;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 500;
        }
        
        .dropdown-menu {
            border: none;
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        
        .user-info {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }
        
        .dropdown-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
        }
        
        .dropdown-item i {
            margin-right: 8px;
            font-size: 1.2rem;
        }
        
        .dropdown-divider {
            margin: 0.5rem 0;
        }
        
        .page-title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #1a237e;
            border-bottom: 2px solid #1a237e;
            padding-bottom: 0.5rem;
            display: inline-block;
        }
        
        /* Card animations */
        .card {
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        /* Mobile navbar */
        .mobile-toggle {
            display: none;
            background: transparent;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        /* Responsive adjustments */
        @@media (max-width: 991px) {
            .navbar-nav {
                display: none;
                position: absolute;
                top: 70px;
                left: 0;
                right: 0;
                background: #0d47a1;
                padding: 1rem;
                flex-direction: column;
            }
            
            .navbar-nav.show {
                display: flex;
            }
            
            .mobile-toggle {
                display: block;
            }
            
            .main-content {
                padding: 1rem 1.5rem;
            }
            
            .card:hover {
                transform: none;
            }
        }
    </style>

</head>

<body>
    <div class="wrapper">
        <!-- Top Navbar -->
        <nav class="top-navbar d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <button class="mobile-toggle me-2" id="navbarToggle">
                    <i class="material-icons">menu</i>
                </button>
                <a href="/" class="navbar-brand">Investment Tracker</a>
            </div>
            
            <ul class="navbar-nav d-flex flex-row mb-0 mx-3" id="navbarNav">
                <li class="nav-item me-2">
                    <a asp-page="/Portfolios/Index" class="nav-link" id="portfoliosTab">
                        <i class="material-icons">account_balance_wallet</i>
                        <span>Portfolios</span>
                    </a>
                </li>
                
                @if (User.IsInRole("Admin"))
                {
                    <li class="nav-item me-2">
                        <a asp-page="/InvestmentCategories/Index" class="nav-link" id="categoriesTab">
                            <i class="material-icons">category</i>
                            <span>Categories</span>
                        </a>
                    </li>
                    <li class="nav-item me-2">
                        <a asp-page="/Users/Index" class="nav-link" id="usersTab">
                            <i class="material-icons">people</i>
                            <span>Users</span>
                        </a>
                    </li>
                    <li class="nav-item me-2">
                        <a asp-page="/AdminTools" class="nav-link" id="settingsTab">
                            <i class="material-icons">settings</i>
                            <span>Settings</span>
                        </a>
                    </li>
                }
            </ul>
            
            <div class="dropdown user-dropdown">
                @{
                    var firstName = HttpContextAccessor.HttpContext.User.Claims
                    .Where(c => c.Type == "FirstName")
                    .Select(c => c.Value)
                    .FirstOrDefault();

                    var lastName = HttpContextAccessor.HttpContext.User.Claims
                    .Where(c => c.Type == "LastName")
                    .Select(c => c.Value)
                    .FirstOrDefault();

                    var fullName = $"{firstName} {lastName}";

                    var email = HttpContextAccessor.HttpContext.User.Claims
                    .Where(c => c.Type == "Email")
                    .Select(c => c.Value)
                    .FirstOrDefault();
                    
                    var initials = "";
                    if (!string.IsNullOrEmpty(firstName) && !string.IsNullOrEmpty(lastName))
                    {
                        initials = $"{firstName[0]}{lastName[0]}";
                    }
                }
                <a href="#" class="dropdown-toggle d-flex align-items-center" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <div class="user-avatar">
                        @initials
                    </div>
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                    <li class="user-info">
                        <div class="d-flex flex-column">
                            <span class="fw-bold">@fullName</span>
                            <small class="text-muted">@email</small>
                        </div>
                    </li>
                    <div class="dropdown-divider"></div>
                    <li>
                        <form method="post" asp-page="/Auth/Logout" asp-route-returnUrl="@Url.Page("/Auth/Login")" id="logoutForm" class="m-0">
                            <button type="submit" class="dropdown-item">
                                <i class="material-icons">exit_to_app</i>
                                <span>Logout</span>
                            </button>
                        </form>
                    </li>
                </ul>
            </div>
        </nav>
        
        <div class="main-content">
            @RenderBody()
        </div>
    </div>

    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap-5.3.3/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/scripts.min.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Handle active menu item
            var currentPath = window.location.pathname;
            var pathSegments = currentPath.split('/').filter(segment => segment); // This removes empty segments
            var navItems = document.querySelectorAll('.nav-link');
            navItems.forEach(function (navItem) {
                var href = navItem.getAttribute('href');
                var cleanHref = href.split('?')[0].split('/').filter(segment => segment);
                if (pathSegments[0] === cleanHref[0]) {
                    navItem.classList.add('active');
                } else {
                    navItem.classList.remove('active');
                }
            });
            
            // Mobile navbar toggle
            const navbarToggle = document.getElementById('navbarToggle');
            const navbarNav = document.getElementById('navbarNav');
            
            if (navbarToggle && navbarNav) {
                navbarToggle.addEventListener('click', function() {
                    navbarNav.classList.toggle('show');
                });
                
                // Close navbar when clicking on a link (mobile)
                const navLinks = navbarNav.querySelectorAll('a');
                navLinks.forEach(link => {
                    link.addEventListener('click', function() {
                        if (window.innerWidth < 992) {
                            navbarNav.classList.remove('show');
                        }
                    });
                });
                
                // Close navbar when clicking outside
                document.addEventListener('click', function(event) {
                    if (window.innerWidth < 992 && 
                        !navbarNav.contains(event.target) && 
                        !navbarToggle.contains(event.target) &&
                        navbarNav.classList.contains('show')) {
                        navbarNav.classList.remove('show');
                    }
                });
            }
        });
    </script>
</body>
</html>
