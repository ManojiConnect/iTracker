@using Application.Features.Investments.Common
@using Application.Features.Common.Responses
@using Application.Features.Portfolios.GetAllPortfolios
@using WebApp.Services
@inject IApplicationSettingsService ApplicationSettings

@model PaginatedList<InvestmentDto>

@{
    var isAjax = Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest";
    var pageNumber = Context.Request.Query["pageNumber"].ToString();
    if (string.IsNullOrEmpty(pageNumber))
    {
        pageNumber = "1";
    }

    var categorySummaries = ViewBag.CategorySummaries as List<WebApp.Pages.Investments.CategorySummary>;
    var categories = ViewBag.Categories as List<string> ?? new List<string>();
    var formatCurrency = ViewBag.FormatCurrency as Func<decimal, string> ?? (value => value.ToString("C"));
    var pageSize = ViewBag.PageSize as int? ?? 10;
    var selectedCategory = Context.Request.Query["category"].ToString();
}

@if (!isAjax)
{
    <!-- Category Summaries -->
    @if (categorySummaries?.Any() == true)
    {
        <div class="row mb-4">
            @foreach (var category in categorySummaries)
            {
                <div class="col-12 col-sm-6 col-lg-4 col-xl-3 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="rounded-circle p-2 me-3" style="background-color: @category.Color">
                                    <i class="material-icons text-white">category</i>
                                </div>
                                <div>
                                    <h6 class="mb-0">@category.Name</h6>
                                    <small class="text-muted">@category.InvestmentCount Investments</small>
                                </div>
                            </div>
                            <div class="mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted">Value:</span>
                                    <span class="fw-bold">@ApplicationSettings.FormatCurrency(category.TotalValue)</span>
                                </div>
                            </div>
                            <div class="mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted">Gain/Loss:</span>
                                    <span class="@(category.UnrealizedGainLoss >= 0 ? "text-success" : "text-danger")">
                                        @(category.UnrealizedGainLoss >= 0 ? "+" : "")@ApplicationSettings.FormatCurrency(category.UnrealizedGainLoss)
                                    </span>
                                </div>
                            </div>
                            <div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted">Return:</span>
                                    <span class="@(category.ReturnPercentage >= 0 ? "text-success" : "text-danger")">
                                        @(category.ReturnPercentage >= 0 ? "+" : "")@ApplicationSettings.FormatNumber(category.ReturnPercentage, 2)%
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}

@if (!isAjax)
{
    <div class="card">
        <div class="card-body">
            <form id="filterForm" method="get" class="mb-4">
                <div class="row g-3">
                    <div class="col-12 col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-white">
                                <i class="material-icons">search</i>
                            </span>
                            <input type="text" id="searchInput" name="searchTerm" class="form-control" placeholder="Search investments..." value="@Context.Request.Query["searchTerm"]">
                        </div>
                    </div>
                    <div class="col-12 col-md-3">
                        <select id="categoryFilter" name="category" class="form-select">
                            <option value="">All Categories</option>
                            @foreach (var category in categories)
                            {
                                var isSelected = selectedCategory == category;
                                <option value="@category" selected="@isSelected">@category</option>
                            }
                        </select>
                    </div>
                    <div class="col-12 col-md-2">
                        <select name="pageSize" class="form-select">
                            @{
                                var pageSizes = new[] { 10, 25, 50 };
                                foreach (var size in pageSizes)
                                {
                                    var isSelected = pageSize == size;
                                    <option value="@size" selected="@isSelected">@size per page</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <input type="hidden" name="pageNumber" value="1">
            </form>
        </div>
    </div>
}

<div class="card">
    <div class="card-body">
        @if (isAjax)
        {
            <form id="filterForm" method="get" class="mb-4">
                <div class="row g-3">
                    <div class="col-12 col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-white">
                                <i class="material-icons">search</i>
                            </span>
                            <input type="text" id="searchInput" name="searchTerm" class="form-control" placeholder="Search investments..." value="@Context.Request.Query["searchTerm"]">
                        </div>
                    </div>
                    <div class="col-12 col-md-3">
                        <select id="categoryFilter" name="category" class="form-select">
                            <option value="">All Categories</option>
                            @foreach (var category in categories)
                            {
                                var isSelected = selectedCategory == category;
                                <option value="@category" selected="@isSelected">@category</option>
                            }
                        </select>
                    </div>
                    <div class="col-12 col-md-2">
                        <select name="pageSize" class="form-select">
                            @{
                                var pageSizes = new[] { 10, 25, 50 };
                                foreach (var size in pageSizes)
                                {
                                    var isSelected = pageSize == size;
                                    <option value="@size" selected="@isSelected">@size per page</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-12 col-md-3">
                        <select id="portfolioFilter" name="portfolioId" class="form-select">
                            <option value="">All Portfolios</option>
                            @foreach (var portfolio in ViewBag.Portfolios ?? new List<PortfolioDto>())
                            {
                                var isSelected = Context.Request.Query["portfolioId"].ToString() == portfolio.Id.ToString();
                                <option value="@portfolio.Id" selected="@isSelected">@portfolio.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <input type="hidden" name="pageNumber" value="1">
            </form>
        }

        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(0)">
                            <div class="d-flex align-items-center">
                                <span>Name</span>
                                <i class="material-icons sort-icon ms-1" data-column="0"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(1)">
                            <div class="d-flex align-items-center">
                                <span>Symbol</span>
                                <i class="material-icons sort-icon ms-1" data-column="1"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(2)">
                            <div class="d-flex align-items-center">
                                <span>Category</span>
                                <i class="material-icons sort-icon ms-1" data-column="2"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(3)">
                            <div class="d-flex align-items-center">
                                <span>Total Investment</span>
                                <i class="material-icons sort-icon ms-1" data-column="3"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(4)">
                            <div class="d-flex align-items-center">
                                <span>Current Value</span>
                                <i class="material-icons sort-icon ms-1" data-column="4"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(5)">
                            <div class="d-flex align-items-center">
                                <span>Gain/Loss</span>
                                <i class="material-icons sort-icon ms-1" data-column="5"></i>
                            </div>
                        </th>
                        <th style="cursor: pointer;" onclick="sortTableByColumn(6)">
                            <div class="d-flex align-items-center">
                                <span>Return</span>
                                <i class="material-icons sort-icon ms-1" data-column="6"></i>
                            </div>
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="tableBody" data-sort-order="asc">
                    @foreach (var investment in Model.Items)
                    {
                        <tr class="investment-item" data-category="@investment.CategoryName" data-portfolio="@investment.PortfolioId">
                            <td>
                                <div class="d-flex align-items-center">
                                    <div>
                                        <div class="fw-bold investment-name">@investment.Name</div>
                                        <small class="text-muted">@investment.PortfolioName</small>
                                    </div>
                                </div>
                            </td>
                            <td>@investment.Symbol</td>
                            <td>@investment.CategoryName</td>
                            <td>@formatCurrency(investment.TotalInvestment)</td>
                            <td>@formatCurrency(investment.CurrentValue)</td>
                            <td class="@(investment.UnrealizedGainLoss >= 0 ? "text-success" : "text-danger")">
                                @(investment.UnrealizedGainLoss >= 0 ? "+" : "")@formatCurrency(investment.UnrealizedGainLoss)
                            </td>
                            <td class="@(investment.ReturnPercentage >= 0 ? "text-success" : "text-danger")">
                                @(investment.ReturnPercentage >= 0 ? "+" : "")@investment.ReturnPercentage.ToString("F2")%
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a asp-page="/Investments/Details" asp-route-id="@investment.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="material-icons">visibility</i>
                                    </a>
                                    <a asp-page="/Investments/Edit" asp-route-id="@investment.Id" class="btn btn-sm btn-outline-secondary">
                                        <i class="material-icons">edit</i>
                                    </a>
                                    <a asp-page="/Investments/History" asp-route-id="@investment.Id" class="btn btn-sm btn-outline-info">
                                        <i class="material-icons">graph_up</i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.TotalPages > 1)
        {
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div class="d-flex align-items-center">
                    <label class="me-2">Show:</label>
                    <select class="form-select form-select-sm" style="width: auto;">
                        <option value="10" selected="@(pageSize == 10)">10</option>
                        <option value="25" selected="@(pageSize == 25)">25</option>
                        <option value="50" selected="@(pageSize == 50)">50</option>
                        <option value="100" selected="@(pageSize == 100)">100</option>
                    </select>
                    <label class="ms-2">entries</label>
                </div>

                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm mb-0">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.PageNumber - 1)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link" aria-hidden="true">&laquo;</span>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(i)">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.PageNumber + 1)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link" aria-hidden="true">&raquo;</span>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

@if (!isAjax)
{
    @section Scripts {
        <script src="~/js/investments-list.js"></script>
    }
}

@functions {
    private string GetPageUrl(int pageNumber)
    {
        var queryParams = new Dictionary<string, string>();
        var currentQuery = Context.Request.Query;

        foreach (var key in currentQuery.Keys)
        {
            if (key != "pageNumber")
            {
                queryParams[key] = currentQuery[key].ToString();
            }
        }

        queryParams["pageNumber"] = pageNumber.ToString();
        
        // Handle the case when ViewBag.PageSize is null
        var pageSize = ViewBag.PageSize as int? ?? 10;
        queryParams["pageSize"] = pageSize.ToString();

        return $"?{string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={kvp.Value}"))}";
    }
} 