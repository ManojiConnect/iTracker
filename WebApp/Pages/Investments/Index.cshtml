@page
@model WebApp.Pages.Investments.IndexModel
@{
    Layout = "_DesktopLayout";
    ViewData["Title"] = "Investments";
    var isGridView = Model.Settings?.DefaultPortfolioView?.ToLower() == "grid";
}

<div class="container-fluid px-4">
    <h1 class="page-title">My Investments</h1>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body d-flex flex-column flex-sm-row justify-content-between align-items-start align-items-sm-center">
                    <div class="mb-3 mb-sm-0">
                        <h5 class="card-title mb-0">Total Investments</h5>
                        <h2 class="text-primary mb-0">@Model.Investments.Count</h2>
                    </div>
                    <div class="d-flex">
                        <div class="btn-group me-2">
                            <button type="button" class="btn @(!isGridView ? "btn-primary" : "btn-outline-primary")" id="listViewBtn">
                                <i class="material-icons fs-5">view_list</i>
                            </button>
                            <button type="button" class="btn @(isGridView ? "btn-primary" : "btn-outline-primary")" id="gridViewBtn">
                                <i class="material-icons fs-5">grid_view</i>
                            </button>
                        </div>
                        <a asp-page="Create" class="btn btn-primary d-flex align-items-center">
                            <i class="material-icons me-2">add</i>
                            <span>Add New Investment</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- List View -->
    <div class="card shadow-sm @(isGridView ? "d-none" : "")" id="listView">
        <div class="card-header bg-light d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center py-3">
            <h5 class="mb-3 mb-md-0">All Investments</h5>
            <div class="input-group" style="max-width: 300px;">
                <span class="input-group-text bg-white border-end-0">
                    <i class="material-icons fs-5">search</i>
                </span>
                <input type="text" id="searchInput" class="form-control border-start-0" placeholder="Search investments..." onkeyup="filterItems()">
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4" style="width: 30%;" onclick="sortTable(0)">Name <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-md-table-cell" style="width: 20%;" onclick="sortTable(1)">Category <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-sm-table-cell" style="width: 15%;" onclick="sortTable(2)">Value <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-lg-table-cell" style="width: 15%;" onclick="sortTable(3)">Portfolio <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th style="width: 20%;" class="text-end pe-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody" data-sort-order="asc">
                        @foreach (var item in Model.Investments)
                        {
                            <tr class="investment-item">
                                <td>
                                    <div class="d-flex flex-column">
                                        <span class="fw-medium investment-name">@item.Name</span>
                                        <div class="d-md-none mt-1">
                                            <span class="badge bg-info bg-opacity-10 text-info px-2 py-1 rounded-pill investment-category">@item.CategoryName</span>
                                        </div>
                                    </div>
                                </td>
                                <td class="d-none d-md-table-cell">
                                    <span class="badge bg-info bg-opacity-10 text-info px-3 py-2 rounded-pill investment-category">@item.Category?.Name</span>
                                </td>
                                <td class="d-none d-sm-table-cell">
                                    <span class="fw-medium">@Html.Raw(Model.FormatCurrency(item.CurrentValue))</span>
                                </td>
                                <td class="d-none d-lg-table-cell">
                                    <span class="fw-medium investment-portfolio">@item.Portfolio?.Name</span>
                                </td>
                                <td class="text-end pe-4">
                                    <div class="btn-group">
                                        <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="material-icons fs-5">edit</i>
                                        </a>
                                        <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">
                                            <i class="material-icons fs-5">info</i>
                                        </a>
                                        <a asp-page="./History" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success">
                                            <i class="material-icons fs-5">trending_up</i>
                                        </a>
                                        <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger d-none d-sm-inline-block">
                                            <i class="material-icons fs-5">delete</i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Grid View -->
    <div class="@(isGridView ? "" : "d-none")" id="gridView">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-light d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center py-3">
                <h5 class="mb-3 mb-md-0">All Investments</h5>
                <div class="input-group" style="max-width: 300px;">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="material-icons fs-5">search</i>
                    </span>
                    <input type="text" id="searchInputGrid" class="form-control border-start-0" placeholder="Search investments..." onkeyup="filterItems()">
                </div>
            </div>
            <div class="card-body">
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    @foreach (var item in Model.Investments)
                    {
                        <div class="col investment-item">
                            <div class="card h-100 shadow-sm">
                                <div class="card-body">
                                    <h5 class="card-title mb-3 investment-name">@item.Name</h5>
                                    <div class="d-flex justify-content-between mb-3">
                                        <span class="badge bg-info bg-opacity-10 text-info px-3 py-2 rounded-pill investment-category">@item.Category?.Name</span>
                                        <span class="badge bg-secondary bg-opacity-10 text-secondary px-3 py-2 rounded-pill investment-portfolio">@item.Portfolio?.Name</span>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-muted">Current Value</span>
                                        <span class="fw-bold">@Html.Raw(Model.FormatCurrency(item.CurrentValue))</span>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-muted">Return</span>
                                        <span class="badge @(item.ReturnPercentage >= 0 ? "bg-success" : "bg-danger") px-2 py-1">
                                            @(item.ReturnPercentage >= 0 ? "+" : "")@Model.FormatNumber(item.ReturnPercentage * 100, 2)%
                                        </span>
                                    </div>
                                </div>
                                <div class="card-footer bg-white border-top-0">
                                    <div class="d-flex justify-content-between">
                                        <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">
                                            <i class="material-icons me-1">info</i> Details
                                        </a>
                                        <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="material-icons me-1">edit</i> Edit
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // View switching
            const listViewBtn = document.getElementById('listViewBtn');
            const gridViewBtn = document.getElementById('gridViewBtn');
            const listView = document.getElementById('listView');
            const gridView = document.getElementById('gridView');
            
            listViewBtn.addEventListener('click', function() {
                listView.classList.remove('d-none');
                gridView.classList.add('d-none');
                listViewBtn.classList.remove('btn-outline-primary');
                listViewBtn.classList.add('btn-primary');
                gridViewBtn.classList.remove('btn-primary');
                gridViewBtn.classList.add('btn-outline-primary');
                
                // Save preference using AJAX
                saveViewPreference('list');
            });
            
            gridViewBtn.addEventListener('click', function() {
                gridView.classList.remove('d-none');
                listView.classList.add('d-none');
                gridViewBtn.classList.remove('btn-outline-primary');
                gridViewBtn.classList.add('btn-primary');
                listViewBtn.classList.remove('btn-primary');
                listViewBtn.classList.add('btn-outline-primary');
                
                // Save preference using AJAX
                saveViewPreference('grid');
            });
            
            function saveViewPreference(viewType) {
                fetch('/Investments/SaveViewPreference?viewType=' + viewType, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).catch(error => console.error('Error saving view preference:', error));
            }
        });
        
        function filterItems() {
            const searchValue = document.getElementById('searchInput').value.toUpperCase();
            const searchValueGrid = document.getElementById('searchInputGrid').value.toUpperCase();
            const filter = searchValue || searchValueGrid;
            
            const items = document.getElementsByClassName('investment-item');
            
            for (let i = 0; i < items.length; i++) {
                const nameElement = items[i].querySelector('.investment-name');
                const categoryElement = items[i].querySelector('.investment-category');
                const portfolioElement = items[i].querySelector('.investment-portfolio');
                
                if (nameElement || categoryElement) {
                    const nameText = nameElement ? nameElement.textContent || nameElement.innerText : '';
                    const categoryText = categoryElement ? categoryElement.textContent || categoryElement.innerText : '';
                    const portfolioText = portfolioElement ? portfolioElement.textContent || portfolioElement.innerText : '';
                    
                    if (nameText.toUpperCase().indexOf(filter) > -1 || 
                        categoryText.toUpperCase().indexOf(filter) > -1 ||
                        portfolioText.toUpperCase().indexOf(filter) > -1) {
                        items[i].style.display = "";
                    } else {
                        items[i].style.display = "none";
                    }
                }
            }
        }
    </script>
} 