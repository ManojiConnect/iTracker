@using Application.Features.Investments.Common
@using Application.Features.Common.Responses
@using Application.Features.Portfolios.GetAllPortfolios
@using WebApp.Services
@inject IApplicationSettingsService ApplicationSettings

@model WebApp.Pages.Investments.InvestmentsListViewModel

@{
    var isAjax = Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest";
    var pageNumber = Context.Request.Query["pageNumber"].ToString();
    if (string.IsNullOrEmpty(pageNumber))
    {
        pageNumber = "1";
    }

    var categorySummaries = ViewBag.CategorySummaries as List<WebApp.Pages.Investments.CategorySummary>;
    var categories = Model.Categories ?? new List<string>();
    var formatCurrency = Model.FormatCurrency ?? (value => value.ToString("C"));
    var pageSize = Model.PageSize;
    var selectedCategory = Context.Request.Query["category"].ToString();
}

@if (!isAjax)
{
    <form method="get" class="mb-4" id="filterForm">
        <div class="card">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-12 col-md-3">
                        <div class="form-group">
                            <label for="searchText" class="form-label">Search</label>
                            <input type="text" id="searchText" name="searchText" class="form-control" value="@Context.Request.Query["searchText"]" placeholder="Search investments..." />
                        </div>
                    </div>
                    <div class="col-12 col-md-3">
                        <div class="form-group">
                            <label for="category" class="form-label">Category</label>
                            <select id="category" name="category" class="form-select">
                                <option value="">All Categories</option>
                                @foreach (var category in categories)
                                {
                                    var isSelected = selectedCategory == category;
                                    <option value="@category" selected="@isSelected">@category</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-md-3">
                        <div class="form-group">
                            <label for="portfolioFilter" class="form-label">Portfolio</label>
                            <select id="portfolioFilter" name="portfolioId" class="form-select">
                                <option value="">All Portfolios</option>
                                @foreach (var portfolio in Model.Portfolios)
                                {
                                    var isSelected = Context.Request.Query["portfolioId"].ToString() == portfolio.Id.ToString();
                                    <option value="@portfolio.Id" selected="@isSelected">@portfolio.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-md-3">
                        <div class="form-group">
                            <label for="pageSize" class="form-label">Items per page</label>
                            <select name="pageSize" class="form-select form-select-sm">
                                @foreach (var size in new[] { 10, 25, 50, 100 })
                                {
                                    var isSelected = Model.PageSize == size;
                                    <option value="@size" selected="@isSelected">@size</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" name="pageNumber" value="@Model.Investments.PageNumber" />
    </form>
}

<partial name="_InvestmentsTable" model="Model.Investments" />

<style>
    .cursor-pointer {
        cursor: pointer;
    }
    .cursor-pointer:hover {
        opacity: 0.8;
    }
    .sort-icon {
        font-size: 18px;
        opacity: 0.5;
    }
    .page-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        padding: 0;
    }
    .page-link i {
        font-size: 20px;
    }
    /* Search input styling */
    .search-input {
        padding-left: 40px;
        height: 38px;
        border-radius: 0.375rem;
        border: 1px solid #dee2e6;
        background-color: #fff;
    }
    .search-input:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
</style> 