@page
@model WebApp.Pages.Users.IndexModel
@{
    Layout = "_DesktopLayout";
    ViewData["Title"] = "User Management";
}

<div class="container-fluid px-4">
    <h1 class="page-title">User Management</h1>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title mb-0">Total Users</h5>
                        <h2 class="text-primary mb-0">@Model.Users.Count</h2>
                    </div>
                    <a asp-page="Create" class="btn btn-primary d-flex align-items-center">
                        <i class="material-icons me-2">add</i>
                        <span>Add New User</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center py-3">
            <h5 class="mb-3 mb-md-0">All Users</h5>
            <div class="input-group" style="max-width: 300px;">
                <span class="input-group-text bg-white border-end-0">
                    <i class="material-icons fs-5">search</i>
                </span>
                <input type="text" id="searchInput" class="form-control border-start-0" placeholder="Search users..." onkeyup="filterTable()">
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4" onclick="sortTable(0)">Name <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-md-table-cell" onclick="sortTable(1)">Email <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-sm-table-cell" onclick="sortTable(2)">Role <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="d-none d-lg-table-cell" onclick="sortTable(3)">Status <i class="material-icons fs-6 align-middle">unfold_more</i></th>
                            <th class="text-end pe-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody" data-sort-order="asc">
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td class="ps-4">
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(user.ProfileUrl))
                                        {
                                            <div class="avatar me-2">
                                                <img src="@user.ProfileUrl" alt="@user.FirstName @user.LastName" class="rounded-circle" width="36" height="36">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="avatar me-2 bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 36px; height: 36px;">
                                                @(user.FirstName?.Substring(0, 1).ToUpper())@(user.LastName?.Substring(0, 1).ToUpper())
                                            </div>
                                        }
                                        <div>
                                            <div class="fw-medium">@user.FirstName @user.LastName</div>
                                            <div class="small text-muted d-md-none">@user.Email</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="d-none d-md-table-cell">
                                    <span>@user.Email</span>
                                </td>
                                <td class="d-none d-sm-table-cell">
                                    <span class="badge bg-info bg-opacity-10 text-info px-2 py-1 rounded-pill">@user.Role</span>
                                </td>
                                <td class="d-none d-lg-table-cell">
                                    @if (user.IsActive == true)
                                    {
                                        <span class="badge bg-success bg-opacity-10 text-success px-2 py-1 rounded-pill">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger bg-opacity-10 text-danger px-2 py-1 rounded-pill">Inactive</span>
                                    }
                                </td>
                                <td class="text-end pe-4">
                                    <div class="btn-group">
                                        @if (user.Id != 0)
                                        {
                                            <a asp-page="./Edit" asp-route-id="@user.Id" class="btn btn-sm btn-outline-primary">
                                                <i class="material-icons fs-5">edit</i>
                                            </a>
                                            <a asp-page="./Delete" asp-route-id="@user.Id" class="btn btn-sm btn-outline-danger">
                                                <i class="material-icons fs-5">delete</i>
                                            </a>
                                        }
                                        else if (!string.IsNullOrEmpty(user.IdentityId))
                                        {
                                            <a asp-page="./Edit" asp-route-identityId="@user.IdentityId" class="btn btn-sm btn-outline-primary">
                                                <i class="material-icons fs-5">edit</i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-secondary" disabled title="Delete not available for this user">
                                                <i class="material-icons fs-5">delete</i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-outline-secondary" disabled title="Edit not available">
                                                <i class="material-icons fs-5">edit</i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-secondary" disabled title="Delete not available">
                                                <i class="material-icons fs-5">delete</i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterTable() {
            const input = document.getElementById("searchInput");
            const filter = input.value.toUpperCase();
            const table = document.getElementById("tableBody");
            const rows = table.getElementsByTagName("tr");

            for (let i = 0; i < rows.length; i++) {
                const nameCell = rows[i].cells[0];
                const emailCell = rows[i].cells[1];
                const roleCell = rows[i].cells[2];
                
                let txtValue = nameCell.textContent || nameCell.innerText;
                let emailValue = emailCell ? emailCell.textContent || emailCell.innerText : "";
                let roleValue = roleCell ? roleCell.textContent || roleCell.innerText : "";
                
                if (txtValue.toUpperCase().indexOf(filter) > -1 || 
                    emailValue.toUpperCase().indexOf(filter) > -1 ||
                    roleValue.toUpperCase().indexOf(filter) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }

        function sortTable(n) {
            const table = document.getElementById("tableBody");
            const rows = Array.from(table.rows);
            const sortOrder = table.dataset.sortOrder === "asc" ? "desc" : "asc";
            
            rows.sort((a, b) => {
                const x = a.cells[n].textContent.trim().toLowerCase();
                const y = b.cells[n].textContent.trim().toLowerCase();
                
                return sortOrder === "asc" 
                    ? x.localeCompare(y) 
                    : y.localeCompare(x);
            });
            
            rows.forEach(row => table.appendChild(row));
            table.dataset.sortOrder = sortOrder;
        }
    </script>
} 