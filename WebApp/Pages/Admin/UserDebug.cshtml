@page
@model WebApp.Pages.Admin.UserDebugModel
@{
    ViewData["Title"] = "User Debug Information";
    Layout = "_DesktopLayout";
}

<div class="container mt-4">
    <h2>User Debug Information</h2>
    <div class="alert alert-warning">
        <strong>Warning:</strong> This page is intended for debugging purposes only. It contains sensitive information and should be accessed only by administrators.
    </div>

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">User Accounts</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Name</th>
                            <th>Password Hash</th>
                            <th>Roles</th>
                            <th>Active</th>
                            <th>Created Date</th>
                            <th>Lockout</th>
                            <th>Failed Attempts</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>@user.FirstName @user.LastName</td>
                                <td>
                                    <div class="password-hash" style="max-width: 300px; overflow-x: auto;">
                                        @user.PasswordHash
                                    </div>
                                </td>
                                <td>@string.Join(", ", user.Roles)</td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>@user.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    @if (user.LockoutEnabled)
                                    {
                                        <span class="badge bg-warning">Enabled</span>
                                        @if (user.LockoutEnd.HasValue && user.LockoutEnd > DateTimeOffset.Now)
                                        {
                                            <span>Until: @user.LockoutEnd.Value.ToString("yyyy-MM-dd HH:mm")</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Disabled</span>
                                    }
                                </td>
                                <td>@user.AccessFailedCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <a asp-page="/Index" class="btn btn-secondary">Back to Home</a>
    </div>
</div>

@section Scripts {
    <script>
        // Add copy functionality for password hashes
        document.addEventListener('DOMContentLoaded', function () {
            const passwordHashes = document.querySelectorAll('.password-hash');
            
            passwordHashes.forEach(element => {
                element.style.cursor = 'pointer';
                element.title = 'Click to copy';
                
                element.addEventListener('click', function() {
                    const text = this.innerText;
                    navigator.clipboard.writeText(text).then(function() {
                        // Visual feedback on copy
                        const originalBackground = element.style.backgroundColor;
                        element.style.backgroundColor = '#d4edda';
                        setTimeout(() => {
                            element.style.backgroundColor = originalBackground;
                        }, 500);
                    });
                });
            });
        });
    </script>
} 